#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#define QuantidadeProdutosMaximo 3

struct Produto{
  int Id;
  char Nome[50];
  char Descricao[100];
  float Preco;
  char Data[11];
  int Quantidade;
};

void Menu();
struct Produto InsereProdutos(int contador);
void AlteraProdutos(struct Produto produtos[QuantidadeProdutosMaximo]);
void AlteraProduto(struct Produto produto, struct Produto produtos[QuantidadeProdutosMaximo]);
void ExcluiProdutos(struct Produto produtos[QuantidadeProdutosMaximo]);
void ListaProdutos();
struct Produto PesquisaProdutos(struct Produto produtos[QuantidadeProdutosMaximo], int exclusaoOuAlteracao);
void MostraProduto(struct Produto produtos);
void LimpaTela();
struct Produto BuscarProdutoPorId(struct Produto produtos[QuantidadeProdutosMaximo]);
struct Produto BuscarProdutoPorNome(struct Produto produtos[QuantidadeProdutosMaximo]);

int main(int argc, char *argv[]) {
    setlocale(LC_ALL,"Portuguese");
	Menu();
	
	return 0;
}

void Menu(){
	int resposta;
	struct Produto produtos[QuantidadeProdutosMaximo];
	int contador = 0;
	
	do{
		printf("O que você deseja fazer??\n1)Inserir Produtos\n2)Alterar Produtos\n3)Excluir produtos\n4)Pesquisar produtos\n5)Listar todos os produtos do estoque e de um departamento\n6)Sair\nEscolha: ");
		fflush(stdin);
		scanf("%i", &resposta);
		
		switch(resposta){
			case 1:
				if(contador < QuantidadeProdutosMaximo){
					printf("\n-------Inserir um produto-------\n\n");
					produtos[contador] = InsereProdutos(contador);
					contador++;	
				}else
					printf("\nQuantidade Máxima de produtos cadastrados!!\n\n");
					
				LimpaTela();
				break;
				
			case 2: 
				if(contador > 0){
					printf("\n-------Alterar um produto-------\n\n");
					AlteraProdutos(produtos);
				}else
					printf("\nVoce não tem produtos cadastrados!!\n\n");
					
				LimpaTela();
				break;
				
			case 3:
				if(contador > 0){
					printf("\n-------Excluir um produto-------\n\n");
					ExcluiProdutos(produtos);
					contador--;
				}
				else
					printf("\nVoce não tem produtos cadastrados!!\n\n");
					
				LimpaTela();
				break;
				
			case 4: 
				if(contador > 0){
					printf("\n-------Pesquisar um produto-------\n\n");
					PesquisaProdutos(produtos, 0);
				}else
					printf("\nVoce não tem produtos cadastrados!!\n\n");
				LimpaTela();
				break;
				
			case 5: 
				if(contador > 0){
					printf("\n-------Lista de produtos-------\n");
					ListaProdutos(produtos);
				}else
					printf("\nVoce não tem produtos cadastrados!!\n\n");
					
				LimpaTela();
				break;
				
			case 6: 
				printf("\nSaindo....\n");
				break;
				
			default:
				printf("\nInsira uma opcao correta!\n\n");
				LimpaTela();
				break;
		}
	}while(resposta != 6);
}

struct Produto InsereProdutos(int contador){
	struct Produto produto;
	
	do{
		printf("Qual o nome do teu produto: ");
		fflush(stdin);
		fgets(produto.Nome, 50, stdin);	
		
		if(produto.Nome[0] <= 'a' && produto.Nome[0] <= 'z' && produto.Nome[0] < 'A' && produto.Nome[0] <= 'Z')
			printf("\nInsira um nome que comece com uma letra!!!\n");
			
	}while(produto.Nome[0] <= 'a' && produto.Nome[0] <= 'z' && produto.Nome[0] < 'A' && produto.Nome[0] <= 'Z');
	
	printf("Qual a descrição do teu produto: ");
	fflush(stdin);
	fgets(produto.Descricao, 100, stdin);
	
	printf("Qual o preço do teu produto: ");
	fflush(stdin);
	scanf("%f", &produto.Preco);
	
	printf("Qual a data de validade do teu produto: ");
	fflush(stdin);
	fgets(produto.Data, 11, stdin);
	
	printf("Qual a quantidade do teu produto: ");
	fflush(stdin);
	scanf("%i", &produto.Quantidade);
	
	produto.Id = contador;
	
	return produto;
}

void AlteraProdutos(struct Produto produtos[QuantidadeProdutosMaximo]){
	struct Produto produto = PesquisaProdutos(produtos, 1);
	int escolha, i;
	
	if(produto.Nome[0] >= 'a' && produto.Nome[0] <= 'z' || produto.Nome[0] >= 'A' && produto.Nome[0] <= 'Z'){
		printf("\n\nO que você deseja alterar?\n1- Nome\n2- Descrição\n3- Preço\n4- Data de validade\n5- Quantidade\n6- Sair\nEscolha: ");
		fflush(stdin);
		scanf("%i", &escolha);
		
		switch(escolha){
			case 1:
				printf("Qual novo nome deseja colocar: ");
				fflush(stdin);
				fgets(produto.Nome, 50, stdin);
				
				AlteraProduto(produto, produtos);
				
				break;
				
			case 2:
				printf("Qual nova descrição deseja colocar: ");
				fflush(stdin);
				fgets(produto.Descricao, 50, stdin);
				
				AlteraProduto(produto, produtos);
				
				break;
				
			case 3:
				printf("Qual novo Preço deseja colocar: ");
				fflush(stdin);
				scanf("%f", &produto.Preco);
				
				AlteraProduto(produto, produtos);
				
				break;
				
			case 4:
				printf("Qual nova data deseja colocar: ");
				fflush(stdin);
				fgets(produto.Data, 11, stdin);
				
				AlteraProduto(produto, produtos);
				
				break;
				
			case 5: 
				printf("Qual nova quantidade deseja colocar: ");
				fflush(stdin);
				scanf("%i", &produto.Quantidade);
				
				AlteraProduto(produto, produtos);
				
				break;
			
			case 6:
				break;
				
			default: 
				printf("\nInsira um opção valida!!");
			}
	}
}

void AlteraProduto(struct Produto produto, struct Produto produtos[QuantidadeProdutosMaximo]){
	int i;
	
	for(i = 0; i < QuantidadeProdutosMaximo; i++)
				if(produtos[i].Id == produto.Id)
					if(produtos[i].Nome[0] >= 'a' && produtos[i].Nome[0] <= 'z' || produtos[i].Nome[0] >= 'A' && produtos[i].Nome[0] <= 'Z')
						produtos[i] = produto;
						
	printf("\n\nProduto Alterado com sucesso!!!\n\n");
}

void ExcluiProdutos(struct Produto produtos[QuantidadeProdutosMaximo]){
	struct Produto produto = PesquisaProdutos(produtos, 1);
	if(produto.Nome[0] >= 'a' && produto.Nome[0] <= 'z' || produto.Nome[0] >= 'A' && produto.Nome[0] <= 'Z'){
		struct Produto aux;
		
		int i, posicao;
		
		for (i = 0; i < QuantidadeProdutosMaximo; i++){
			if(produtos[i].Id == produto.Id)
				if(produtos[i].Nome[0] >= 'a' && produtos[i].Nome[0] <= 'z' || produtos[i].Nome[0] >= 'A' && produtos[i].Nome[0] <= 'Z')
					posicao = i;
		}
					
		for(i = 0; i < QuantidadeProdutosMaximo; i++){
			aux = produtos[posicao];
			produtos[posicao] = produtos[posicao + 1];
			produtos[posicao + 1] = aux;
			posicao++;
		}
	}
}

struct Produto PesquisaProdutos(struct Produto produtos[QuantidadeProdutosMaximo], int exclusaoOuAlteracao){
	int escolha = 0 , i = 0;
	
	do{
		printf("Você quer pesquisar o produto pelo: \n1)Id\n2)Nome\n3)Sair\nEscolha: ");
		fflush(stdin);
		scanf("%i", &escolha);
		
		switch(escolha){
			case 1: 
				if(exclusaoOuAlteracao == 0)
					BuscarProdutoPorId(produtos);				
				else
					return BuscarProdutoPorId(produtos);
				
		    	LimpaTela();	
		    	break;
		    
		    case 2: 
		    	if(exclusaoOuAlteracao == 0)
					BuscarProdutoPorNome(produtos);				
				else
					return BuscarProdutoPorNome(produtos);				
					
			    LimpaTela();
			    break;
			    
			case 3: 
				break;
			
			default: 
				printf("\nInsira um opção valida!!");
		}		
	}while(escolha != 3);
}

void ListaProdutos(struct Produto produtos[QuantidadeProdutosMaximo]){
	int i;
	
	for(i = 0; i < QuantidadeProdutosMaximo; i++){
		if(produtos[i].Nome[0] >= 'a' && produtos[i].Nome[0] <= 'z' || produtos[i].Nome[0] >= 'A' && produtos[i].Nome[0] <= 'Z'){
		    MostraProduto(produtos[i]);
		}
		printf("\n");
	}
}

void MostraProduto(struct Produto produtos){
    printf("\n----------Produto ----------");
    printf("\nId: %i", produtos.Id);
    printf("\nNome: %s", produtos.Nome);
    printf("Descrição: %s", produtos.Descricao);
    printf("Preço: %f", produtos.Preco);
    printf("\nData de Validade: %s\n", produtos.Data);
    printf("Quantidade: %i", produtos.Quantidade);
}

void LimpaTela(){
	printf("\nAperte ENTER para continuar: ");
	fflush(stdin);
	getchar();
	system("cls");
}

struct Produto BuscarProdutoPorId(struct Produto produtos[QuantidadeProdutosMaximo]){
	int id = -2, resposta = 0, i = 0;
		    
	printf("Insira o Id do produto que voce deseja procurar: ");
	fflush(stdin);
	scanf("%i", &id);
	
	for(i = 0; i < QuantidadeProdutosMaximo + 1; i++){
		if(i == QuantidadeProdutosMaximo){
			printf("\nAcabou os produtos!!\n\n");
		}else{
			if(produtos[i].Id == id){
				if(produtos[i].Nome[0] >= 'a' && produtos[i].Nome[0] <= 'z' || produtos[i].Nome[0] >= 'A' && produtos[i].Nome[0] <= 'Z'){
					MostraProduto(produtos[i]);
			        printf("\nEsse produto que você queria encontrar? 1 - Sim 2 - Não: ");
			        fflush(stdin);
			        scanf("%i", &resposta);
			        
			        if(resposta == 1)
			        	return produtos[i];	
				}
		        
		    }		
		}
	}
}

struct Produto BuscarProdutoPorNome(struct Produto produtos[QuantidadeProdutosMaximo]){
	int i, resposta = 0;
	char nome[50];
	printf("Insira o nome do produto que voce deseja procurar: ");
	fflush(stdin);
    fgets(nome, 50, stdin);
	
	for(i = 0; i < QuantidadeProdutosMaximo +  1; i++){
		if(i == QuantidadeProdutosMaximo){
			printf("\nAcabou os produtos!!\n\n");
		}else{
			if(strstr(produtos[i].Nome, nome) != NULL){
		        MostraProduto(produtos[i]);
		        printf("\nEsse produto que você queria encontrar? 1 - Sim 2 - Não: ");
		        fflush(stdin);
		        scanf("%i", &resposta);
		        
		        if(resposta == 1)
		        	return produtos[i];
		    	
			}
		}
	}
}
